name: CI de Backend (NestJS + FastAPI)

on:
  workflow_call: # ðŸ‘‰ permite que otros workflows (como el del frontend) lo llamen

jobs:
  test-backend-nest:
    name: Test NestJS App
    runs-on: ubuntu-latest

    # âœ… SecciÃ³n aÃ±adida: levantar un contenedor MySQL como servicio
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: bd_voluntariado
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpassword
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies (NestJS)
        working-directory: ./backend/nest-app
        run: npm install

      - name: Test build and run NestJS
        working-directory: ./backend/nest-app
        env:
          # âœ… Variables de entorno para que NestJS use el contenedor MySQL
          DB_HOST: mysql          # Nombre del servicio del contenedor
          DB_PORT: 3306
          DB_DATABASE: bd_voluntariado
          DB_USER: testuser
          DB_PASSWORD: testpassword
        run: |
          npm run build
          npm run start:dev &
          sleep 10
          pkill node

  test-backend-fastapi:
    name: Test FastAPI Verificador
    runs-on: ubuntu-latest
    needs: [test-backend-nest] # âœ… Espera a que NestJS termine con Ã©xito

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies (FastAPI)
        working-directory: ./backend/fastapi-verificador
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Test start FastAPI
        working-directory: ./backend/fastapi-verificador
        run: |
          nohup python -m uvicorn main:app --reload &
          sleep 10
          pkill python
