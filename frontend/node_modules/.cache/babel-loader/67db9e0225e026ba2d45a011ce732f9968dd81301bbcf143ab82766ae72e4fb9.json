{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User hp\\\\Documents\\\\ITP\\\\PROYECTODIP\\\\Voluntariado\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { getUserData } from \"../services/auth/AuthService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth debe usarse dentro de un AuthProvider\");\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      try {\n        const profile = await getUserData();\n        if (profile) {\n          var _profile$ciudad, _profile$ciudad2, _profile$ciudad2$depa;\n          setUser({\n            userId: profile.id_usuario,\n            nombreCompleto: `${profile.nombre} ${profile.apellido}`,\n            email: profile.correo,\n            rol: profile.rol,\n            verificado: profile.verificado,\n            urlImage: profile.url_imagen,\n            ciudad: (_profile$ciudad = profile.ciudad) === null || _profile$ciudad === void 0 ? void 0 : _profile$ciudad.ciudad,\n            departamento: (_profile$ciudad2 = profile.ciudad) === null || _profile$ciudad2 === void 0 ? void 0 : (_profile$ciudad2$depa = _profile$ciudad2.departamento) === null || _profile$ciudad2$depa === void 0 ? void 0 : _profile$ciudad2$depa.departamento\n          });\n        } else {\n          setUser(null);\n        }\n      } catch (err) {\n        console.error(\"Error al obtener el perfil del usuario:\", err);\n        setUser(null);\n      }\n    };\n    fetchUserProfile();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      setUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","getUserData","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","fetchUserProfile","profile","_profile$ciudad","_profile$ciudad2","_profile$ciudad2$depa","userId","id_usuario","nombreCompleto","nombre","apellido","email","correo","rol","verificado","urlImage","url_imagen","ciudad","departamento","err","console","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User hp/Documents/ITP/PROYECTODIP/Voluntariado/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { getUserData } from \"../services/auth/AuthService\";\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth debe usarse dentro de un AuthProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUserProfile = async () => {\r\n      try {\r\n        const profile = await getUserData();\r\n        if (profile) {\r\n          setUser({\r\n            userId: profile.id_usuario,\r\n            nombreCompleto: `${profile.nombre} ${profile.apellido}`,\r\n            email: profile.correo,\r\n            rol: profile.rol,\r\n            verificado: profile.verificado,\r\n            urlImage: profile.url_imagen,\r\n            ciudad: profile.ciudad?.ciudad,\r\n            departamento: profile.ciudad?.departamento?.departamento,\r\n          });\r\n        } else {\r\n          setUser(null);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error al obtener el perfil del usuario:\", err);\r\n        setUser(null);\r\n      }\r\n    };\r\n\r\n    fetchUserProfile();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser}}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,WAAW,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,WAAW,gBAAGP,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMQ,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGT,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;EAClE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMe,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,OAAO,GAAG,MAAMd,WAAW,CAAC,CAAC;QACnC,IAAIc,OAAO,EAAE;UAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,qBAAA;UACXL,OAAO,CAAC;YACNM,MAAM,EAAEJ,OAAO,CAACK,UAAU;YAC1BC,cAAc,EAAE,GAAGN,OAAO,CAACO,MAAM,IAAIP,OAAO,CAACQ,QAAQ,EAAE;YACvDC,KAAK,EAAET,OAAO,CAACU,MAAM;YACrBC,GAAG,EAAEX,OAAO,CAACW,GAAG;YAChBC,UAAU,EAAEZ,OAAO,CAACY,UAAU;YAC9BC,QAAQ,EAAEb,OAAO,CAACc,UAAU;YAC5BC,MAAM,GAAAd,eAAA,GAAED,OAAO,CAACe,MAAM,cAAAd,eAAA,uBAAdA,eAAA,CAAgBc,MAAM;YAC9BC,YAAY,GAAAd,gBAAA,GAAEF,OAAO,CAACe,MAAM,cAAAb,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBc,YAAY,cAAAb,qBAAA,uBAA5BA,qBAAA,CAA8Ba;UAC9C,CAAC,CAAC;QACJ,CAAC,MAAM;UACLlB,OAAO,CAAC,IAAI,CAAC;QACf;MACF,CAAC,CAAC,OAAOmB,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,yCAAyC,EAAEF,GAAG,CAAC;QAC7DnB,OAAO,CAAC,IAAI,CAAC;MACf;IACF,CAAC;IAEDC,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA,CAACC,WAAW,CAAC+B,QAAQ;IAACC,KAAK,EAAE;MAAExB,IAAI;MAAEC;IAAO,CAAE;IAAAH,QAAA,EAC3CA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC7B,GAAA,CAnCWF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}