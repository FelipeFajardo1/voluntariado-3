{"ast":null,"code":"import api from \"../../config/AxiosConfig\";\n\n/**\n * Restablece la contraseña del usuario\n * @param {string} token - Token JWT de recuperación\n * @param {string} code - Código de verificación\n * @param {string} nuevaContrasena - Nueva contraseña del usuario\n * @returns {Promise} - Respuesta del servidor\n */\nexport const resetPassword = async (token, code, nuevaContrasena) => {\n  try {\n    const response = await api.post(\"/auth/restablecer\", {\n      token: code,\n      nuevaContrasena\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["api","resetPassword","token","code","nuevaContrasena","response","post","headers","Authorization","error"],"sources":["C:/Users/User hp/Documents/ITP/PROYECTODIP/Voluntariado/frontend/src/services/auth/authResetPassword.jsx"],"sourcesContent":["import api from \"../../config/AxiosConfig\";\n\n/**\n * Restablece la contraseña del usuario\n * @param {string} token - Token JWT de recuperación\n * @param {string} code - Código de verificación\n * @param {string} nuevaContrasena - Nueva contraseña del usuario\n * @returns {Promise} - Respuesta del servidor\n */\nexport const resetPassword = async (token, code, nuevaContrasena) => {\n  try {\n    const response = await api.post(\n      \"/auth/restablecer\",\n      { \n        token: code,\n        nuevaContrasena\n      },\n      {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }\n    );\n    return response;\n  } catch (error) {\n    throw error;\n  }\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,0BAA0B;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOC,KAAK,EAAEC,IAAI,EAAEC,eAAe,KAAK;EACnE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAC7B,mBAAmB,EACnB;MACEJ,KAAK,EAAEC,IAAI;MACXC;IACF,CAAC,EACD;MACEG,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUN,KAAK;MAChC;IACF,CACF,CAAC;IACD,OAAOG,QAAQ;EACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}