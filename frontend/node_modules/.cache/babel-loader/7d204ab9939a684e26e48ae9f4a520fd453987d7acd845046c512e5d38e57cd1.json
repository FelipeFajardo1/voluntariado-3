{"ast":null,"code":"import api from \"../../config/AxiosConfig\";\nexport const isAuthenticated = async () => {\n  try {\n    const response = await api.get(\"/auth/perfil\");\n    return response.status === 200;\n  } catch (error) {\n    var _error$response;\n    if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) await logout();\n    console.error(\"Error comprobando autenticación: \", error);\n    return false;\n  }\n};\nexport const getUserData = async () => {\n  try {\n    const response = await api.get(\"/auth/perfil\");\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) await logout();\n    console.error(\"Error obteniendo datos del usuario: \", error);\n    return null;\n  }\n};\nexport const register = async data => {\n  try {\n    const response = await api.post(\"/usuarios/registro\", data);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const logout = async () => {\n  try {\n    const response = await api.post(\"/auth/logout\");\n    return response.status === 200;\n  } catch (error) {\n    console.error(\"Error cerrando sesión:\", error);\n    return false;\n  }\n};\nexport const login = async (correo, contrasena) => {\n  try {\n    const response = await api.post(\"/auth/login\", {\n      correo,\n      contrasena\n    });\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\n\n// ✅ Inicio de sesión con Google\nexport const loginWithGoogle = async credential => {\n  try {\n    const response = await api.post(\"/auth/google-login\", {\n      credential\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["api","isAuthenticated","response","get","status","error","_error$response","logout","console","getUserData","data","_error$response2","register","post","login","correo","contrasena","loginWithGoogle","credential"],"sources":["C:/Users/User hp/Documents/ITP/PROYECTODIP/Voluntariado/frontend/src/services/auth/AuthService.jsx"],"sourcesContent":["import api from \"../../config/AxiosConfig\";\r\n\r\nexport const isAuthenticated = async () => {\r\n    try {\r\n        const response = await api.get(\"/auth/perfil\");\r\n        return response.status === 200;\r\n    } catch (error) {\r\n        if(error.response?.status === 401) await logout();\r\n        console.error(\"Error comprobando autenticación: \",error);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const getUserData = async () => {\r\n    try{\r\n        const response = await api.get(\"/auth/perfil\");\r\n        return response.data;\r\n    }catch(error){\r\n        if(error.response?.status === 401) await logout();\r\n        console.error(\"Error obteniendo datos del usuario: \", error);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const register = async(data) => {\r\n    try{\r\n        const response = await api.post(\"/usuarios/registro\", data);\r\n        return response.data;\r\n    } catch( error ){\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const logout = async () => {\r\n  try {\r\n    const response = await api.post(\"/auth/logout\");\r\n    return response.status === 200;\r\n  } catch (error) {\r\n    console.error(\"Error cerrando sesión:\", error);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const login = async (correo, contrasena) => {\r\n    try {\r\n        const response = await api.post(\"/auth/login\",{\r\n            correo, contrasena,\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\n// ✅ Inicio de sesión con Google\r\nexport const loginWithGoogle = async (credential) => {\r\n  try {\r\n    const response = await api.post(\"/auth/google-login\", { credential });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,0BAA0B;AAE1C,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,cAAc,CAAC;IAC9C,OAAOD,QAAQ,CAACE,MAAM,KAAK,GAAG;EAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACZ,IAAG,EAAAA,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,MAAM,MAAK,GAAG,EAAE,MAAMG,MAAM,CAAC,CAAC;IACjDC,OAAO,CAACH,KAAK,CAAC,mCAAmC,EAACA,KAAK,CAAC;IACxD,OAAO,KAAK;EAChB;AACJ,CAAC;AAED,OAAO,MAAMI,WAAW,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAG;IACC,MAAMP,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,cAAc,CAAC;IAC9C,OAAOD,QAAQ,CAACQ,IAAI;EACxB,CAAC,QAAML,KAAK,EAAC;IAAA,IAAAM,gBAAA;IACT,IAAG,EAAAA,gBAAA,GAAAN,KAAK,CAACH,QAAQ,cAAAS,gBAAA,uBAAdA,gBAAA,CAAgBP,MAAM,MAAK,GAAG,EAAE,MAAMG,MAAM,CAAC,CAAC;IACjDC,OAAO,CAACH,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC5D,OAAO,IAAI;EACf;AACJ,CAAC;AAED,OAAO,MAAMO,QAAQ,GAAG,MAAMF,IAAI,IAAK;EACnC,IAAG;IACC,MAAMR,QAAQ,GAAG,MAAMF,GAAG,CAACa,IAAI,CAAC,oBAAoB,EAAEH,IAAI,CAAC;IAC3D,OAAOR,QAAQ,CAACQ,IAAI;EACxB,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAME,MAAM,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMF,GAAG,CAACa,IAAI,CAAC,cAAc,CAAC;IAC/C,OAAOX,QAAQ,CAACE,MAAM,KAAK,GAAG;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdG,OAAO,CAACH,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,OAAO,KAAK;EACd;AACF,CAAC;AAED,OAAO,MAAMS,KAAK,GAAG,MAAAA,CAAOC,MAAM,EAAEC,UAAU,KAAK;EAC/C,IAAI;IACA,MAAMd,QAAQ,GAAG,MAAMF,GAAG,CAACa,IAAI,CAAC,aAAa,EAAC;MAC1CE,MAAM;MAAEC;IACZ,CAAC,CAAC;IACF,OAAOd,QAAQ,CAACQ,IAAI;EACxB,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZ,OAAOA,KAAK;EAChB;AACJ,CAAC;;AAED;AACA,OAAO,MAAMY,eAAe,GAAG,MAAOC,UAAU,IAAK;EACnD,IAAI;IACF,MAAMhB,QAAQ,GAAG,MAAMF,GAAG,CAACa,IAAI,CAAC,oBAAoB,EAAE;MAAEK;IAAW,CAAC,CAAC;IACrE,OAAOhB,QAAQ,CAACQ,IAAI;EACtB,CAAC,CAAC,OAAOL,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}